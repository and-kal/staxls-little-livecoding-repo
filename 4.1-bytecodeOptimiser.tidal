-----------------------------------
--           part one            --
--                               --
--   relevant note channels      --
--      1,2,3,4                  --
--                               --
--     relevant CC channels      --
--     13-18: vitalkick          --
--     19-24: hat                --
--     25-30: percs              --
--     31-36: mel                --
-----------------------------------

let 
  midiN chan = s "midi" # midichan (chan - 1) 
  ccDis chan val = ccv val # ccn chan # s "midi" 
  ccSeg chan val = ccv (segment 50 $ val) # ccn chan # s "midi" 
in
d1
$
-- someCyclesBy (1/2) ((1/8) ~>)
-- $
-- someCyclesBy (1/3) ((1/4) <~)
-- $
-- someCyclesBy (1/4) (rev)
-- $
-- someCyclesBy (1/6) (zoom (0, 0.875))
-- $
-- someCyclesBy (1/12) (zoom (0.125, 0.25))
-- $
stack 
[
  someCyclesBy (1/3) (|+ n "[5]")
  $
  (|+ n "[7]")
  $
  n (scale "marva" "[0 _ _ _ _ 5 _ 7 _ _ 3 _ _ _ 2 4 _ _]/6") # midiN 1 # legato 2
  ,
  (|- n 24)
  $
  someCyclesBy (1/3) (fast 2) 
  $ n "[0*[1|2|4] 1*[2|4]]" # midiN 2 -- ^ ki sn
  ,
  somecyclesBy (1/4) (fast "[0.5 1.5]")
  $
  degradeBy((1/3))
  $ (|- n 24)
  $ n "[2|3]*16" # midiN 2 -- ^ hect
  ,
  (|+ n (negate 24))
  $ n "<~!4 4*2>" # midiN 2 -- ^ graineffclap
  ,
  always (|+ n (choose[0,3..12]))
  $ n "-24?*8" # midiN 3 -- ^ gated 
  ,
  (|+ n (negate 24))
  $
  superimpose (|+ n "[+12, +24, +36, -7]")
  $
  n (scale "marva" "[0 4 5 7 3 2]/6") # midiN 4 # legato 2 -- ^ bass 
  ,
  ccDis 13 "<15!6 90!2>" -- ^ rev
  ,
  ccDis 25 "<0!7 64!2>" -- ^ delay on/off
  , 
  ccDis 26 "<0!7 [43]!2>" -- ^ delay time
  , 
  ccDis 27 "<127!2 0!6>" -- ^ grain d/w
]
  # cps(187/60/4)

hush

-----------------------------------
--           part two            --
--                               --
--  relevant note channels       --
--      5,6,7,8                  --
--                               --
--     relevant CC channels      --
--     37-42:                    --
--     43-48:                    --
--     49-54:                    --
--     55-60:                    --
-----------------------------------

let 
  midiN chan = s "midi" # midichan (chan - 1) 
  ccSeg chan val = ccv (segment 50 $ val) # ccn chan # s "midi" 
  ccDis chan val = ccv val # ccn chan # s "midi" 
in
d2
$
somecyclesBy (1/4) (rev)
$
whenmod 20 16 (fast 2)
$
somecyclesBy (1/8) ((degradeBy (0.75)) . (fast 2))
$
whenmod 20 18 (slow "4 0.5 4 0.5")
$
stack [ 
  (|- n 24) $ 
  stack [
  n "0" -- ^ 808
  , n "~ 2" -- ^ clap
  , somecyclesBy (1/4) (fast "[[0.5 2]|2]") $ n "3*16" -- ^ hat
  ] # midiN 5 
  , 
  sometimesBy (1/3) (+ n "[2|4|6]")
  $
  whenmod 8 4 ((slow 2) . (# legato 2))
  $
  slow 2
  $
  (0.125 ~>) $ n (scale "leadingWhole" "~ [0,3,6] _ [0,1,4]") 
  # midiN 6 -- ^ sampler 
  , 
  sometimesBy (1/4) (|- n "[2|7]") $
  n "~ [7 ~ 7 _ _ 7 _ _]" -- ^ distkick
  # midiN 7
  ,
  whenmod 11 9 (|+ ccv 100)
  $
  ccDis 37 0 -- ^ 808 rdx
  ,
  whenmod 13 12 (|+ ccv 127)
  $
  ccDis 38 0 -- ^ hats grain 
  ,
  whenmod 17 15 (|+ ccv 127)
  $
  ccDis 49 0 -- ^ kick glitchshift
]
  # cps(97/60/4)

hush

-----------------------------------
--           part three          --
--                               --
--  relevant note channels       --
--      9,10,11,12               --
--                               --
--   67-70: kick                 --
--   71-74: hihat                --
--   75-78: snare                --
--   79-82: plaits               --
-----------------------------------

let 
  pattern = "{0@2 0@3 1@4 0@5 1@4 0@6 2@2}%16"
  midiN chan = s "midi" # midichan (chan - 1) 
in 
d3
$ somecyclesBy (1/4) (rev)
-- $ whenmod 14 11 (linger (choose[(1/16),(1/8),(1/4)]))
$ stack [
    someCyclesBy (1/8) (|+ n "[7|-7]")
    $ n (unwrap $ fmap (["c3","d3","~"]!!) $ pattern) # s "midi" # midiN 9 -- ^ kick
    , ccv "<120 0!7>" # ccn 67 # s "midi" -- ^ dist
    , ccv "<42!8 120>" # ccn 68 # s "midi" -- ^ transpose (default: 42)
    , n (unwrap $ fmap (["~","[[c5 ~]*16, [~ c4]*16]","~"]!!) $ pattern) # s "midi" # midiN 10 -- ^ hihat
    , n (unwrap $ fmap (["0","0","0*16"]!!) $ pattern) # s "midi" # midiN 11 -- ^ snare
    , somecyclesBy (1/4) (|+ n "[-2|12]")
    $ n (scale "hirajoshi" (unwrap $ fmap (["c'7f5","~","f'7f5"]!!) $ pattern)) # s "midi" # midiN 12 -- ^ plaits
    , ccv (segment 100 $ range 30 80 $ slow 6 $ sine) # ccn 79 # s "midi" -- ^ harmonics
    , ccv (segment 100 $ range 0 100 $ slow 12 $ sine) # ccn 80 # s "midi" -- ^ timbre
    , ccv (segment 100 $ range 30 60 $ slow 6 $ sine) # ccn 81 # s "midi" -- ^ morph
]
  # cps(145/60/4)

hush

-----------------------------------
--           part four           --
--                               --
--  relevant note channels       --
--      13,14,15,16              --
--                               --
--   83-86: xylo                 --
--   87-90: kick                 --
--   91-94:  clap                --
--   95-98:   hat                --
-----------------------------------

let 
  pattern = "{0@4 0@8 3@2 1@2 0@4 1@10 2@5 @5}%16"
  midiN chan = s "midi" # midichan (chan - 1) 
in 
d4
$ whenmod 32 28 ((ply 6) . (slow 2)) 
-- $ always ((#end 0.1) . (# legato 0.2))
$ stack [
    sometimes (|+ n 6) $ n (scale "messiaen2" (unwrap $ fmap(["c'add9", "e'maj9", "c'maj9", "f'maj9"]!!) $ pattern)) 
    # s "midi" # midiN 13 -- ^ xylo
    ,
    ccv (segment 100 $ range 0 120 $ slow 2 $ perlin) # ccn 83 # s "midi" -- ^ osc1
    , 
    ccv (segment 100 $ range 1 126 $ slow 2 $ cosine) # ccn 84 # s "midi" -- ^ panning 
    , 
    ccv (segment 100 $ range 1 126 $ slow 2 $ sine) # ccn 85 # s "midi" -- ^ panning 
    ,
    ccv (segment 100 $ range 30 120 $ perlin) # ccn 86 # s "midi" -- ^ osc2
    ,
    someCyclesBy (1/8) (+| n (run "[8|16|32]")) $
    n (unwrap $ fmap(["c3", "e3", "~", "~"]!!) $ pattern) # s "midi" # midiN 14 -- ^ kick
    ,
    somecyclesBy(1/8) (plyWith 3 (|+ n 2)) $ 
    n (scale "messiaen2" (unwrap $ fmap(["~", "~", "~", "0"]!!) $ pattern)) # s "midi" # midiN 15 -- ^ clap
    ,
    plyWith 4 (|- n 2) $ 
    n (scale "messiaen2" (unwrap $ fmap(["0", "0", "0", "0"]!!) $ pattern)) # s "midi" # midiN 16 -- ^ hihat
] 
-- # cps(range (155/60/4) (20/60/4) $ sine)
# cps(155/60/4)

hush