   _.-._.-._.-._.-._.-._.-._.-._.-._.-._.-._.-._.-._.-._.-._
 ,'_.-._.-._.-._.-._.-._.-._.-._.-._.-._.-._.-._.-._.-._.-._`.
( (                                                         ) )
 ) )                                                       ( (
( (        Thank you all for coming out!                    ) )
 ) )                                                       ( (
( (                                                         ) )
 ) )                My name is S t a x l                    ( (
( (                                                         ) )
 ) )                                                       ( (
( (                                                         ) )
 ) )     I will play a little set of livecoded music now   ( (
( (                                                         ) )
 ) )           using a language/tool called                ( (
( (                         T i d a l C y c l e s           ) )
 ) )                                                       ( (
( (                                                         ) )
 ) )                                                       ( (
( (_.-._.-._.-._.-._.-._.-._.-._.-._.-._.-._.-._.-._.-._.-._) )
 `._.-._.-._.-._.-._.-._.-._.-._.-._.-._.-._.-._.-._.-._.-._,'


-----------------------------------
--           part one            --
--                               --
--   relevant note channels      --
--      1,2,3,4                  --
--                               --
--     relevant CC channels      --
--     1-8                      --
--     9-16                     --
--     17-24                    --
--     25-32                    --
-----------------------------------

let pattern = "{0*2@10 1@12 1@10 1@1 1@6 1@4 1@3 1@2 [1@1]!8 1@6 1@6 2*8@5}%32"
in 
  d1 
  $ 
  stack [
    stack [
      somecyclesBy (1/8) (rev)
      $
      whenmod 32 28 (linger (1/8))
      $
      sometimes (|+ note 7)
      $
      note (unwrap $ fmap (["-17","~","~"]!!) $ pattern) # s "midi" # midichan 0 -- kick
      ,
      note (unwrap $ fmap (["~","12","~"]!!) $ pattern) # s "midi" # midichan 1 -- hat
      ,
      sometimes ((# amp 0.6) . (# legato 1) . (|+ note 36)) -- bloops
      $
      note (unwrap $ fmap (["~","~","0"]!!) $ pattern) # s "midi" # midichan 2 -- snare
      ,
      ccv (segment 127 $ range 10 60 $ slow 3 $ perlin ) # ccn 1 # s "midi" -- kick sweep
      ,
      ccv (segment 127 $ range 1 126 $ slow 8 $ sine ) # ccn 9 # s "midi" -- hat pan
    ]
    ,
    someCyclesBy (1/4) (|- n 12)
    $
    loopAt 4 $ n "[d6'7f10|d6'7f10'i|d6'7f10'ii]" # s "midi" # midichan 3 -- pad
    # legato 2
    ,
    ccv (segment 127 $ range 1 60 $ slow 8 $ sine ) # ccn 25 # s "midi" -- pad start
  ]
  # cps(152/60/4)

hush

-----------------------------------
--           part two            --
--                               --
--   relevant note channels      --
--      5,6,7,8                  --
--                               --
--     relevant CC channels      --
--     33-40:                    --
--     41-48:                    --
--     49-56:                    --
--     57-64:                    --
-----------------------------------

d1 
$ 
-- sometimes ((slow 4) . (ply 8)) 
someCyclesBy (1/8) (ply 2)
$ 
sometimes (|+ n 1) 
$ n (run 8) 
  # s "midi" # midichan 4
  # cps(165/60/4)

hush

-----------------------------------
--           part three          --
--                               --
--   relevant note channels      --
--      9,10,11,12               --
--                               --
--     relevant CC channels      --
--     65-72:                    --
--     73-80:                    --
--     81-88:                    --
--     89-96:                    --
-----------------------------------


-----------------------------------
--           part four           --
--                               --
--   relevant note channels      --
--    13,14,15,16                --
--                               --
--     relevant CC channels      --
--     97-104:                   --
--     105-112:                  --
--     113-120:                  --
--     121-127:                  --
-----------------------------------
